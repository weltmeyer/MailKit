<Type Name="MailFolder" FullName="MailKit.MailFolder">
  <TypeSignature Language="C#" Value="public abstract class MailFolder : MailKit.IMailFolder, System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MailFolder extends System.Object implements class MailKit.IMailFolder, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MimeMessage&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMailFolder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An abstract mail folder implementation.
            </summary>
    <remarks>
            An abstract mail folder implementation.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MailFolder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.MailFolder" /> class.
            </summary>
        <remarks>
            Initializes a new instance of the <see cref="T:MailKit.MailFolder" /> class.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedFlags">
      <MemberSignature Language="C#" Value="public MailKit.MessageFlags AcceptedFlags { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.MessageFlags AcceptedFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the accepted flags.
            </summary>
        <value>The accepted flags.</value>
        <remarks>
            The accepted flags are the message flags that will be accepted and persist
            for the current session. For the set of flags that will persist between
            sessions, see the <see cref="P:MailKit.MailFolder.PermanentFlags" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Access">
      <MemberSignature Language="C#" Value="public MailKit.FolderAccess Access { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.FolderAccess Access" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the read/write access of the folder.
            </summary>
        <value>The read/write access.</value>
        <remarks>
            Gets the read/write access of the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified message.
            </summary>
        <remarks>
            Adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual void AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual void AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified message.
            </summary>
        <remarks>
            Adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified message.
            </summary>
        <remarks>
            Adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public abstract void AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public abstract void AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages.
            </summary>
        <remarks>
            Adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;int&gt; AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified message.
            </summary>
        <remarks>
            Adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; AddFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; AddFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; AddFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; AddFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddFlagsAsync (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AddFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AddFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; AddFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; AddFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddFlagsAsync (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AddFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AddFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; AddFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; AddFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="userFlags">A set of user-defined flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public void AddLabels (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLabels(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified message.
            </summary>
        <remarks>
            Adds a set of labels to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public abstract void AddLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages.
            </summary>
        <remarks>
            Adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public abstract void AddLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages.
            </summary>
        <remarks>
            Adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public void AddLabels (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLabels(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified message.
            </summary>
        <remarks>
            Adds a set of labels to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; AddLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; AddLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; AddLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; AddLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddLabelsAsync (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddLabelsAsync(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AddLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddLabelsAsync (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddLabelsAsync(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the messages.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AddLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AddLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; AddLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; AddLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously add a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously adds a set of labels to the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.MimeMessage message, MailKit.MessageFlags flags = MailKit.MessageFlags.None, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public abstract Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags = MailKit.MessageFlags.None, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Collections.Generic.IList&lt;DateTimeOffset&gt; dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, class System.Collections.Generic.IList`1&lt;valuetype System.DateTimeOffset&gt; dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="dates" Type="System.Collections.Generic.IList&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public abstract Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Append (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Collections.Generic.IList&lt;DateTimeOffset&gt; dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, class System.Collections.Generic.IList`1&lt;valuetype System.DateTimeOffset&gt; dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="dates" Type="System.Collections.Generic.IList&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.MimeMessage message, MailKit.MessageFlags flags = MailKit.MessageFlags.None, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AppendAsync (System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags = MailKit.MessageFlags.None, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AppendAsync (System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Collections.Generic.IList&lt;DateTimeOffset&gt; dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, class System.Collections.Generic.IList`1&lt;valuetype System.DateTimeOffset&gt; dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="dates" Type="System.Collections.Generic.IList&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.FormatOptions options, MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.FormatOptions options, class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously appends the specified message to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="message" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; AppendAsync (MimeKit.FormatOptions options, System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt; messages, System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt; flags, System.Collections.Generic.IList&lt;DateTimeOffset&gt; dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; AppendAsync(class MimeKit.FormatOptions options, class System.Collections.Generic.IList`1&lt;class MimeKit.MimeMessage&gt; messages, class System.Collections.Generic.IList`1&lt;valuetype MailKit.MessageFlags&gt; flags, class System.Collections.Generic.IList`1&lt;valuetype System.DateTimeOffset&gt; dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="messages" Type="System.Collections.Generic.IList&lt;MimeKit.MimeMessage&gt;" />
        <Parameter Name="flags" Type="System.Collections.Generic.IList&lt;MailKit.MessageFlags&gt;" />
        <Parameter Name="dates" Type="System.Collections.Generic.IList&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously append the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously appends the specified messages to the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>Internationalized formatting was requested but has not been enabled.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Internationalized formatting was requested but is not supported by the server.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public MailKit.FolderAttributes Attributes { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.FolderAttributes Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the folder attributes.
            </summary>
        <value>The folder attributes.</value>
        <remarks>
            Gets the folder attributes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public abstract void Check (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Check(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Force the server to flush its state for the folder.
            </summary>
        <remarks>
            Forces the server to flush its state for the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CheckAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CheckAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously force the server to flush its state for the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously forces the server to flush its state for the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (bool expunge = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(bool expunge, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expunge" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expunge">If set to <c>true</c>, expunge.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Close the folder, optionally expunging the messages marked for deletion.
            </summary>
        <remarks>
            Closes the folder, optionally expunging the messages marked for deletion.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (bool expunge = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(bool expunge, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expunge" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expunge">If set to <c>true</c>, expunge.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously close the folder, optionally expunging the messages marked for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously closes the folder, optionally expunging the messages marked for deletion.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;MailKit.UniqueId&gt; CopyTo (MailKit.UniqueId uid, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; CopyTo(valuetype MailKit.UniqueId uid, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copy the specified message to the destination folder.
            </summary>
        <returns>The UID of the message in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Copies the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; CopyTo (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; CopyTo(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copy the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
            Copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public abstract void CopyTo (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copy the specified messages to the destination folder.
            </summary>
        <remarks>
            Copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copy the specified message to the destination folder.
            </summary>
        <remarks>
            Copies the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> does not refer to a valid message index.
            </exception>
        <exception cref="T:System.ArgumentException">
            The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; CopyToAsync (MailKit.UniqueId uid, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; CopyToAsync(valuetype MailKit.UniqueId uid, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously copy the specified message to the destination folder.
            </summary>
        <returns>The UID of the message in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously copies the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; CopyToAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; CopyToAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously copy the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously copy the specified messages to the destination folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously copies the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (int index, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(int32 index, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The indexes of the message to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously copy the specified message to the destination folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously copies the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> does not refer to a valid message index.
            </exception>
        <exception cref="T:System.ArgumentException">
            The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the total number of messages in the folder.
            </summary>
        <value>The total number of messages.</value>
        <remarks>
          <para>Gets the total number of messages in the folder.</para>
          <para>Note: This value will only be set after calling <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            with <see cref="F:MailKit.StatusItems.Count" /> or by opening the folder.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; CountChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; CountChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the message count changes.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.CountChanged" /> event is emitted whenever the <see cref="P:MailKit.MailFolder.Count" /> value changes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract MailKit.IMailFolder Create (string name, bool isMessageFolder, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IMailFolder Create(string name, bool isMessageFolder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isMessageFolder" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the folder to create.</param>
        <param name="isMessageFolder">
          <c>true</c> if the folder will be used to contain messages; otherwise <c>false</c>.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Create a new subfolder with the given name.
            </summary>
        <returns>The created folder.</returns>
        <remarks>
            Creates a new subfolder with the given name.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The <see cref="P:MailKit.MailFolder.DirectorySeparator" /> is nil, and thus child folders cannot be created.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt; CreateAsync (string name, bool isMessageFolder, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MailKit.IMailFolder&gt; CreateAsync(string name, bool isMessageFolder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isMessageFolder" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the folder to create.</param>
        <param name="isMessageFolder">
          <c>true</c> if the folder will be used to contain messages; otherwise <c>false</c>.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously create a new subfolder with the given name.
            </summary>
        <returns>The created folder.</returns>
        <remarks>
            Asynchronously creates a new subfolder with the given name.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The <see cref="P:MailKit.MailFolder.DirectorySeparator" /> is nil, and thus child folders cannot be created.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Delete the folder.
            </summary>
        <remarks>
            Deletes the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be deleted (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously delete the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously deletes the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be deleted (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Deleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is deleted.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.Deleted" /> event is emitted when the folder is deleted.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparator">
      <MemberSignature Language="C#" Value="public char DirectorySeparator { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char DirectorySeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the directory separator.
            </summary>
        <value>The directory separator.</value>
        <remarks>
            Gets the directory separator.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get a value indicating whether the folder exists.
            </summary>
        <value>
          <c>true</c> if the folder exists; otherwise, <c>false</c>.</value>
        <remarks>
            Gets a value indicating whether the folder exists.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public abstract void Expunge (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Expunge(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunge the folder, permanently removing all messages marked for deletion.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted for each
            message that is expunged. However, if the mail store supports the quick
            resynchronization feature and it has been enabled via the
            <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public abstract void Expunge (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Expunge(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The message uids.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunge the specified uids, permanently removing them from the folder.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted for each
            message that is expunged. However, if the mail store supports the quick
            resynchronization feature and it has been enabled via the
            <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpungeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ExpungeAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExpungeAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously expunge the folder, permanently removing all messages marked for deletion.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted for each
            message that is expunged. However, if the mail store supports the quick
            resynchronization feature and it has been enabled via the
            <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpungeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ExpungeAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExpungeAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The message uids.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously expunge the specified uids, permanently removing them from the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.MailFolder.MessageExpunged" /> event will be emitted for each
            message that is expunged. However, if the mail store supports the quick
            resynchronization feature and it has been enabled via the
            <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.MailFolder.MessagesVanished" /> event will be emitted rather than the
            <see cref="E:MailKit.MailFolder.MessageExpunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the mail store supports quick resynchronization and the application has
            enabled this feature via <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.IMailStore" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the mail store supports quick resynchronization and the application has
            enabled this feature via <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.IMailStore" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetch the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message UIDs.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the mail store supports quick resynchronization and the application has
            enabled this feature via <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.IMailStore" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (int min, int max, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the mail store supports quick resynchronization and the application has
            enabled this feature via <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.MailFolder.MessagesVanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.IMailStore" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the specified message indexes.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="fields" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (int min, int max, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the messages between the two indexes, inclusive.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt; FetchAsync (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt; fields, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.IMessageSummary&gt;&gt; FetchAsync(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, class System.Collections.Generic.HashSet`1&lt;valuetype MimeKit.HeaderId&gt; fields, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.IMessageSummary&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="fields" Type="System.Collections.Generic.HashSet&lt;MimeKit.HeaderId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="fields">The desired header fields.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously fetch the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
            Asynchronously fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fields" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fields" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstUnread">
      <MemberSignature Language="C#" Value="public int FirstUnread { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstUnread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the index of the first unread message in the folder.
            </summary>
        <value>The index of the first unread message.</value>
        <remarks>
            This value will only be set after the folder has been opened.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the full name of the folder.
            </summary>
        <value>The full name of the folder.</value>
        <remarks>
            This is the equivalent of the full path of a file on a file system.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt; GetBodyPartAsync (MailKit.UniqueId uid, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeEntity&gt; GetBodyPartAsync(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Asynchronously gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt; GetBodyPartAsync (int index, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeEntity&gt; GetBodyPartAsync(int32 index, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Asynchronously gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt; GetBodyPartAsync (MailKit.UniqueId uid, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeEntity&gt; GetBodyPartAsync(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Asynchronously gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt; GetBodyPartAsync (int index, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeEntity&gt; GetBodyPartAsync(int32 index, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>
            Asynchronously gets the specified body part.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.MimeMessage&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get an enumerator for the messages in the folder.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the messages in the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeMessage GetMessage (MailKit.UniqueId uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(valuetype MailKit.UniqueId uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public abstract MimeKit.MimeMessage GetMessage (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt; GetMessageAsync (MailKit.UniqueId uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeMessage&gt; GetMessageAsync(valuetype MailKit.UniqueId uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Asynchronously gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt; GetMessageAsync (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MimeKit.MimeMessage&gt; GetMessageAsync(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>
            Asynchronously gets the specified message.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuota">
      <MemberSignature Language="C#" Value="public abstract MailKit.FolderQuota GetQuota (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.FolderQuota GetQuota(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the quota information for the folder.
            </summary>
        <returns>The folder quota.</returns>
        <remarks>
          <para>Gets the quota information for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.IMailStore.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quotas.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.FolderQuota&gt; GetQuotaAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MailKit.FolderQuota&gt; GetQuotaAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.FolderQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the quota information for the folder.
            </summary>
        <returns>The folder quota.</returns>
        <remarks>
          <para>Asynchronously gets the quota information for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.IMailStore.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quotas.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream GetStream (MailKit.UniqueId uid, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Gets a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream GetStream (int index, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 index, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Gets a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream GetStream (MailKit.UniqueId uid, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Gets a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream GetStream (int index, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 index, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Gets a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (MailKit.UniqueId uid, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(valuetype MailKit.UniqueId uid, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Asynchronously gets a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (int index, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(int32 index, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Asynchronously gets a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (MailKit.UniqueId uid, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Asynchronously gets a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (int index, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(int32 index, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Asynchronously gets a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolder">
      <MemberSignature Language="C#" Value="public abstract MailKit.IMailFolder GetSubfolder (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IMailFolder GetSubfolder(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the subfolder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the specified subfolder.
            </summary>
        <returns>The subfolder.</returns>
        <remarks>
            Gets the specified subfolder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is either an empty string or contains the <see cref="P:MailKit.MailFolder.DirectorySeparator" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The requested folder could not be found.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt; GetSubfolderAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MailKit.IMailFolder&gt; GetSubfolderAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.IMailFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the subfolder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the specified subfolder.
            </summary>
        <returns>The subfolder.</returns>
        <remarks>
            Asynchronously gets the specified subfolder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is either an empty string or contains the <see cref="P:MailKit.MailFolder.DirectorySeparator" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The requested folder could not be found.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolders">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt; GetSubfolders (bool subscribedOnly = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.IMailFolder&gt; GetSubfolders(bool subscribedOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscribedOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscribedOnly">If set to <c>true</c>, only subscribed folders will be listed.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Get the subfolders.
            </summary>
        <returns>The subfolders.</returns>
        <remarks>
            Gets the subfolders.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfoldersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt;&gt; GetSubfoldersAsync (bool subscribedOnly = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class MailKit.IMailFolder&gt;&gt; GetSubfoldersAsync(bool subscribedOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;MailKit.IMailFolder&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscribedOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscribedOnly">If set to <c>true</c>, only subscribed folders will be listed.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously get the subfolders.
            </summary>
        <returns>The subfolders.</returns>
        <remarks>
            Asynchronously gets the subfolders.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="HighestModSeq">
      <MemberSignature Language="C#" Value="public ulong HighestModSeq { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 HighestModSeq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the highest mod-sequence value of all messages in the mailbox.
            </summary>
        <value>The highest mod-sequence value.</value>
        <remarks>
            Gets the highest mod-sequence value of all messages in the mailbox.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespace">
      <MemberSignature Language="C#" Value="public bool IsNamespace { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the folder is a namespace folder.
            </summary>
        <value>
          <c>true</c> if the folder is a namespace folder; otherwise, <c>false</c>.</value>
        <remarks>
            Gets whether or not the folder is a namespace folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public abstract bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get a value indicating whether the folder is currently open.
            </summary>
        <value>
          <c>true</c> if the folder is currently open; otherwise, <c>false</c>.</value>
        <remarks>
            Gets a value indicating whether the folder is currently open.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get a value indicating whether the folder is subscribed.
            </summary>
        <value>
          <c>true</c> if the folder is subscribed; otherwise, <c>false</c>.</value>
        <remarks>
            Gets a value indicating whether the folder is subscribed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageExpunged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessageEventArgs&gt; MessageExpunged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessageEventArgs&gt; MessageExpunged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a message is expunged from the folder.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.MessageExpunged" /> event is emitted when a message is expunged from the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFlagsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessageFlagsChangedEventArgs&gt; MessageFlagsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessageFlagsChangedEventArgs&gt; MessageFlagsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessageFlagsChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when flags changed on a message.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> event is emitted when the flags for a message are changed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageLabelsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessageLabelsChangedEventArgs&gt; MessageLabelsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessageLabelsChangedEventArgs&gt; MessageLabelsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessageLabelsChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when labels changed on a message.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> event is emitted when the labels for a message are changed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagesArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessagesArrivedEventArgs&gt; MessagesArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessagesArrivedEventArgs&gt; MessagesArrived" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessagesArrivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when new messages arrive in the folder.
            </summary>
        <remarks>
            Emitted when new mmessages arrive in the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagesVanished">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessagesVanishedEventArgs&gt; MessagesVanished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessagesVanishedEventArgs&gt; MessagesVanished" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessagesVanishedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a message vanishes from the folder.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.MessagesVanished" /> event is emitted when messages vanish from the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;MailKit.UniqueId&gt; MoveTo (MailKit.UniqueId uid, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; MoveTo(valuetype MailKit.UniqueId uid, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Move the specified message to the destination folder.
            </summary>
        <returns>The UID of the message in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Moves the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; MoveTo (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; MoveTo(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Move the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
            Moves the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract void MoveTo (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTo(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Move the specified messages to the destination folder.
            </summary>
        <remarks>
            Moves the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public virtual void MoveTo (int index, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTo(int32 index, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Move the specified message to the destination folder.
            </summary>
        <remarks>
            Moves the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> does not refer to a valid message index.
            </exception>
        <exception cref="T:System.ArgumentException">
            The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Nullable&lt;MailKit.UniqueId&gt;&gt; MoveToAsync (MailKit.UniqueId uid, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt;&gt; MoveToAsync(valuetype MailKit.UniqueId uid, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Nullable&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously move the specified message to the destination folder.
            </summary>
        <returns>The UID of the message in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>
            Asynchronously moves the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; MoveToAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; MoveToAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously move the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise an empty array.</returns>
        <remarks>
            Asynchronously moves the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task MoveToAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MoveToAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously move the specified messages to the destination folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously moves the specified messages to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task MoveToAsync (int index, MailKit.IMailFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MoveToAsync(int32 index, class MailKit.IMailFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="destination" Type="MailKit.IMailFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message to move.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously move the specified message to the destination folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously moves the specified message to the destination folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destination" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> does not refer to a valid message index.
            </exception>
        <exception cref="T:System.ArgumentException">
            The destination folder does not belong to the <see cref="T:MailKit.IMailStore" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the name of the folder.
            </summary>
        <value>The name of the folder.</value>
        <remarks>
            This is the equivalent of the file name of a file on the file system.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCountChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCountChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCountChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the count changed event.
            </summary>
        <remarks>
            Raises the count changed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the deleted event.
            </summary>
        <remarks>
            Raises the deleted event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageExpunged">
      <MemberSignature Language="C#" Value="protected virtual void OnMessageExpunged (MailKit.MessageEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMessageExpunged(class MailKit.MessageEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MailKit.MessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The message expunged event args.</param>
        <summary>
            Raise the message expunged event.
            </summary>
        <remarks>
            Raises the message expunged event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageFlagsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMessageFlagsChanged (MailKit.MessageFlagsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMessageFlagsChanged(class MailKit.MessageFlagsChangedEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MailKit.MessageFlagsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The message flags changed event args.</param>
        <summary>
            Raise the message flags changed event.
            </summary>
        <remarks>
            Raises the message flags changed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageLabelsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMessageLabelsChanged (MailKit.MessageLabelsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMessageLabelsChanged(class MailKit.MessageLabelsChangedEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MailKit.MessageLabelsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The message labels changed event args.</param>
        <summary>
            Raise the message labels changed event.
            </summary>
        <remarks>
            Raises the message labels changed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagesArrived">
      <MemberSignature Language="C#" Value="protected virtual void OnMessagesArrived (MailKit.MessagesArrivedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMessagesArrived(class MailKit.MessagesArrivedEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MailKit.MessagesArrivedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The messages arrived event args.</param>
        <summary>
            Raise the messages arrived event.
            </summary>
        <remarks>
            Raises the messages arrived event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagesVanished">
      <MemberSignature Language="C#" Value="protected virtual void OnMessagesVanished (MailKit.MessagesVanishedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMessagesVanished(class MailKit.MessagesVanishedEventArgs args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="MailKit.MessagesVanishedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">The messages vanished event args.</param>
        <summary>
            Raise the messages vanished event.
            </summary>
        <remarks>
            Raises the messages vanished event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRecentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRecentChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the recent changed event.
            </summary>
        <remarks>
            Raises the recent changed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected virtual void OnRenamed (string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRenamed(string oldName, string newName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldName">The old name of the folder.</param>
        <param name="newName">The new name of the folder.</param>
        <summary>
            Raise the renamed event.
            </summary>
        <remarks>
            Raises the renamed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubscribed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubscribed() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the subscribed event.
            </summary>
        <remarks>
            Raises the subscribed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUidValidityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUidValidityChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUidValidityChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the uid validity changed event.
            </summary>
        <remarks>
            Raises the uid validity changed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribed">
      <MemberSignature Language="C#" Value="protected virtual void OnUnsubscribed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnsubscribed() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raise the unsubscribed event.
            </summary>
        <remarks>
            Raises the unsubscribed event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract MailKit.FolderAccess Open (MailKit.FolderAccess access, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Open the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
            Opens the folder using the requested folder access.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract MailKit.FolderAccess Open (MailKit.FolderAccess access, MailKit.UniqueId uidValidity, ulong highestModSeq, System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype MailKit.UniqueId uidValidity, unsigned int64 highestModSeq, class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="uidValidity" Type="MailKit.UniqueId" />
        <Parameter Name="highestModSeq" Type="System.UInt64" />
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="uidValidity">The last known <see cref="P:MailKit.MailFolder.UidValidity" /> value.</param>
        <param name="highestModSeq">The last known <see cref="P:MailKit.MailFolder.HighestModSeq" /> value.</param>
        <param name="uids">The last known list of unique message identifiers.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
          <para>This variant of the <see cref="M:MailKit.MailFolder.Open(MailKit.FolderAccess,System.Threading.CancellationToken)" />
            method is meant for quick resynchronization of the folder. Before calling this method,
            the <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method MUST be called.</para>
          <para>You should also make sure to add listeners to the <see cref="E:MailKit.MailFolder.MessagesVanished" /> and
            <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events to get notifications of changes since
            the last time the folder was opened.</para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The quick resynchronization feature has not been enabled.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the quick resynchronization feature.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.FolderAccess&gt; OpenAsync (MailKit.FolderAccess access, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype MailKit.FolderAccess&gt; OpenAsync(valuetype MailKit.FolderAccess access, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.FolderAccess&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously open the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
            Asynchronously opens the folder using the requested folder access.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.FolderAccess&gt; OpenAsync (MailKit.FolderAccess access, MailKit.UniqueId uidValidity, ulong highestModSeq, System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype MailKit.FolderAccess&gt; OpenAsync(valuetype MailKit.FolderAccess access, valuetype MailKit.UniqueId uidValidity, unsigned int64 highestModSeq, class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.FolderAccess&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="uidValidity" Type="MailKit.UniqueId" />
        <Parameter Name="highestModSeq" Type="System.UInt64" />
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="uidValidity">The last known <see cref="P:MailKit.MailFolder.UidValidity" /> value.</param>
        <param name="highestModSeq">The last known <see cref="P:MailKit.MailFolder.HighestModSeq" /> value.</param>
        <param name="uids">The last known list of unique message identifiers.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
          <para>This variant of the <see cref="M:MailKit.MailFolder.OpenAsync(MailKit.FolderAccess,System.Threading.CancellationToken)" />
            method is meant for quick resynchronization of the folder. Before calling this method,
            the <see cref="M:MailKit.MailStore.EnableQuickResync(System.Threading.CancellationToken)" /> method MUST be called.</para>
          <para>You should also make sure to add listeners to the <see cref="E:MailKit.MailFolder.MessagesVanished" /> and
            <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events to get notifications of changes since
            the last time the folder was opened.</para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The quick resynchronization feature has not been enabled.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the quick resynchronization feature.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ParentFolder">
      <MemberSignature Language="C#" Value="public MailKit.IMailFolder ParentFolder { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.IMailFolder ParentFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IMailFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the parent folder.
            </summary>
        <value>The parent folder.</value>
        <remarks>
            Root-level folders do not have a parent folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermanentFlags">
      <MemberSignature Language="C#" Value="public MailKit.MessageFlags PermanentFlags { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.MessageFlags PermanentFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the permanent flags.
            </summary>
        <value>The permanent flags.</value>
        <remarks>
            The permanent flags are the message flags that will persist between sessions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recent">
      <MemberSignature Language="C#" Value="public int Recent { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Recent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the number of recently added messages in the folder.
            </summary>
        <value>The number of recently added messages.</value>
        <remarks>
          <para>Gets the number of recently delivered messages in the folder.</para>
          <para>Note: This value will only be set after calling <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            with <see cref="F:MailKit.StatusItems.Recent" /> or by opening the folder.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; RecentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; RecentChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the recent message count changes.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.RecentChanged" /> event is emitted whenever the <see cref="P:MailKit.MailFolder.Recent" /> value changes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified message.
            </summary>
        <remarks>
            Removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public virtual void RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public virtual void RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified message.
            </summary>
        <remarks>
            Removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified message.
            </summary>
        <remarks>
            Removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public abstract void RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public abstract void RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages.
            </summary>
        <remarks>
            Removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;int&gt; RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified message.
            </summary>
        <remarks>
            Removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; RemoveFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; RemoveFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; RemoveFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveFlagsAsync (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; RemoveFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; RemoveFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveFlagsAsync (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; RemoveFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; RemoveFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; RemoveFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="userFlags">A set of user-defined flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No flags were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public void RemoveLabels (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLabels(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified message.
            </summary>
        <remarks>
            Removes a set of labels from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public abstract void RemoveLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages.
            </summary>
        <remarks>
            Removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public abstract void RemoveLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages.
            </summary>
        <remarks>
            Removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public void RemoveLabels (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLabels(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified message.
            </summary>
        <remarks>
            Removes a set of labels from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; RemoveLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; RemoveLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; RemoveLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; RemoveLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveLabelsAsync (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveLabelsAsync(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uid" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RemoveLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveLabelsAsync (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveLabelsAsync(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; RemoveLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; RemoveLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; RemoveLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; RemoveLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously remove a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously removes a set of labels from the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>No labels were specified.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public abstract void Rename (MailKit.IMailFolder parent, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rename(class MailKit.IMailFolder parent, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="MailKit.IMailFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parent">The new parent folder.</param>
        <param name="name">The new name of the folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Rename the folder.
            </summary>
        <remarks>
            Renames the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="parent" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="parent" /> does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is not a legal folder name.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be renamed (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RenameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RenameAsync (MailKit.IMailFolder parent, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RenameAsync(class MailKit.IMailFolder parent, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="MailKit.IMailFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parent">The new parent folder.</param>
        <param name="name">The new name of the folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously rename the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously renames the folder.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="parent" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="parent" /> does not belong to the <see cref="T:MailKit.IMailStore" />.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is not a legal folder name.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be renamed (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.FolderRenamedEventArgs&gt; Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.FolderRenamedEventArgs&gt; Renamed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.FolderRenamedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is renamed.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.Renamed" /> event is emitted when the folder is renamed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Search the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the mail store.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Search the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="orderBy" /> is empty.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Search the subset of UIDs in the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the mail store.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; Search (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; Search(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Search the subset of UIDs in the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is empty.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SearchAsync (MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SearchAsync(class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously search the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the mail store.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SearchAsync (MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SearchAsync(class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously search the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="orderBy" /> is empty.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SearchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SearchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously search the subset of UIDs in the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the mail store.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SearchAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.Search.SearchQuery query, System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt; orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SearchAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class MailKit.Search.SearchQuery query, class System.Collections.Generic.IList`1&lt;class MailKit.Search.OrderBy&gt; orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="System.Collections.Generic.IList&lt;MailKit.Search.OrderBy&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously search the subset of UIDs in the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is empty.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified message.
            </summary>
        <remarks>
            Sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual void SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual void SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified message.
            </summary>
        <remarks>
            Sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified message.
            </summary>
        <remarks>
            Sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public abstract void SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public abstract void SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages.
            </summary>
        <remarks>
            Sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;int&gt; SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified message.
            </summary>
        <remarks>
            Sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; SetFlags (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; SetFlags(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; SetFlags (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; SetFlags(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetFlagsAsync (int index, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetFlagsAsync (MailKit.UniqueId uid, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(valuetype MailKit.UniqueId uid, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SetFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SetFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; SetFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; SetFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetFlagsAsync (int index, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetFlagsAsync(int32 index, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the flags of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SetFlagsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SetFlagsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; SetFlagsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, MailKit.MessageFlags flags, System.Collections.Generic.HashSet&lt;string&gt; userFlags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; SetFlagsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, class System.Collections.Generic.HashSet`1&lt;string&gt; userFlags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="userFlags" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="userFlags">A set of user-defined flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public void SetLabels (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLabels(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UIDs of the message.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified message.
            </summary>
        <remarks>
            Sets the labels of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public abstract void SetLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages.
            </summary>
        <remarks>
            Sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public abstract void SetLabels (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages.
            </summary>
        <remarks>
            Sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public void SetLabels (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLabels(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified message.
            </summary>
        <remarks>
            Sets the labels of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; SetLabels (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; SetLabels(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabels">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;int&gt; SetLabels (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;int32&gt; SetLabels(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetLabelsAsync (MailKit.UniqueId uid, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetLabelsAsync(valuetype MailKit.UniqueId uid, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the labels of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified messages.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the labels of the specified messages.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetLabelsAsync (int index, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetLabelsAsync(int32 index, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified message.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously sets the labels of the specified message.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="labels" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="index" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt; SetLabelsAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt;&gt; SetLabelsAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;int&gt;&gt; SetLabelsAsync (System.Collections.Generic.IList&lt;int&gt; indexes, ulong modseq, System.Collections.Generic.IList&lt;string&gt; labels, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;int32&gt;&gt; SetLabelsAsync(class System.Collections.Generic.IList`1&lt;int32&gt; indexes, unsigned int64 modseq, class System.Collections.Generic.IList`1&lt;string&gt; labels, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Collections.Generic.IList&lt;System.Int32&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="labels" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="labels">The labels to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.MailFolder.MessageLabelsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>
            Asynchronously sets the labels of the specified messages only if their mod-sequence value is less than the specified value.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="labels" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="indexes" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.MailFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetQuota">
      <MemberSignature Language="C#" Value="public abstract MailKit.FolderQuota SetQuota (Nullable&lt;uint&gt; messageLimit, Nullable&lt;uint&gt; storageLimit, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.FolderQuota SetQuota(valuetype System.Nullable`1&lt;unsigned int32&gt; messageLimit, valuetype System.Nullable`1&lt;unsigned int32&gt; storageLimit, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderQuota</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="storageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageLimit">If not <c>null</c>, sets the maximum number of messages to allow.</param>
        <param name="storageLimit">If not <c>null</c>, sets the maximum storage size (in kilobytes).</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Set the quota limits for the folder.
            </summary>
        <returns>The updated folder quota.</returns>
        <remarks>
          <para>Sets the quota limits for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.IMailStore.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quotas.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetQuotaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MailKit.FolderQuota&gt; SetQuotaAsync (Nullable&lt;uint&gt; messageLimit, Nullable&lt;uint&gt; storageLimit, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class MailKit.FolderQuota&gt; SetQuotaAsync(valuetype System.Nullable`1&lt;unsigned int32&gt; messageLimit, valuetype System.Nullable`1&lt;unsigned int32&gt; storageLimit, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MailKit.FolderQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="storageLimit" Type="System.Nullable&lt;System.UInt32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageLimit">If not <c>null</c>, sets the maximum number of messages to allow.</param>
        <param name="storageLimit">If not <c>null</c>, sets the maximum storage size (in kilobytes).</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously set the quota limits for the folder.
            </summary>
        <returns>The updated folder quota.</returns>
        <remarks>
          <para>Asynchronously sets the quota limits for the folder.</para>
          <para>To determine if a quotas are supported, check the
            <see cref="P:MailKit.IMailStore.SupportsQuotas" /> property.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support quotas.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SettableFlags">
      <MemberSignature Language="C#" Value="protected static readonly MailKit.MessageFlags SettableFlags;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype MailKit.MessageFlags SettableFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The bit mask of settable flags.
            </summary>
        <remarks>
            Only flags in list of settable flags may be set on a message by the client.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public abstract void Status (MailKit.StatusItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Status(valuetype MailKit.StatusItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="MailKit.StatusItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="items">The items to update.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Update the values of the specified items.
            </summary>
        <remarks>
          <para>Updates the values of the specified items.</para>
          <para>The <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" /> method
            MUST NOT be used on a folder that is already in the opened state. Instead, other ways
            of getting the desired information should be used.</para>
          <para>For example, a common use for the <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            method is to get the number of unread messages in the folder. When the folder is open, however, it is
            possible to use the <see cref="M:MailKit.MailFolder.Search(MailKit.Search.SearchQuery,System.Threading.CancellationToken)" />
            method to query for the list of unread messages.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the STATUS command.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="StatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StatusAsync (MailKit.StatusItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StatusAsync(valuetype MailKit.StatusItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="MailKit.StatusItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="items">The items to update.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously update the values of the specified items.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
          <para>Updates the values of the specified items.</para>
          <para>The <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" /> method
            MUST NOT be used on a folder that is already in the opened state. Instead, other ways
            of getting the desired information should be used.</para>
          <para>For example, a common use for the <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            method is to get the number of unread messages in the folder. When the folder is open, however, it is
            possible to use the <see cref="M:MailKit.MailFolder.Search(MailKit.Search.SearchQuery,System.Threading.CancellationToken)" />
            method to query for the list of unread messages.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The mail store does not support the STATUS command.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Subscribe to the folder.
            </summary>
        <remarks>
            Subscribes to the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SubscribeAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SubscribeAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously subscribe to the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously subscribes to the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Subscribed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Subscribed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is subscribed.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.Subscribed" /> event is emitted when the folder is subscribed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsModSeq">
      <MemberSignature Language="C#" Value="public bool SupportsModSeq { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsModSeq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get whether or not the folder supports mod-sequences.
            </summary>
        <value>
          <c>true</c> if supports mod-sequences; otherwise, <c>false</c>.</value>
        <remarks>
          <para>If mod-sequences are not supported by the folder, then all of the APIs that take a modseq
            argument will throw <see cref="T:System.NotSupportedException" /> and should not be used.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public abstract object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an object that can be used to synchronize access to the folder.
            </summary>
        <value>The sync root.</value>
        <remarks>
            Gets an object that can be used to synchronize access to the folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get an enumerator for the messages in the folder.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>
            Gets an enumerator for the messages in the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.MessageThread&gt; Thread (MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt; Thread(valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Thread the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;MailKit.MessageThread&gt; Thread (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt; Thread(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Thread the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;&gt; ThreadAsync (MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt;&gt; ThreadAsync(valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously thread the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;&gt; ThreadAsync (System.Collections.Generic.IList&lt;MailKit.UniqueId&gt; uids, MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class MailKit.MessageThread&gt;&gt; ThreadAsync(class System.Collections.Generic.IList`1&lt;valuetype MailKit.UniqueId&gt; uids, valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;MailKit.MessageThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="System.Collections.Generic.IList&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously thread the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IMailFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> is empty.</para>
          <para>-or-</para>
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the mail store.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.IMailStore" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.IMailStore" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.MailFolder" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.MailFolder" />.</returns>
        <remarks>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.MailFolder" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidNext">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; UidNext { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; UidNext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the UID that the folder will assign to the next message that is added.
            </summary>
        <value>The next UID.</value>
        <remarks>
            This value will only be set after the folder has been opened.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidValidity">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; UidValidity { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; UidValidity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the UID validity.
            </summary>
        <value>The UID validity.</value>
        <remarks>
          <para>UIDs are only valid so long as the UID validity value remains unchanged. If and when
            the folder's <see cref="P:MailKit.MailFolder.UidValidity" /> is changed, a client MUST discard its cache of UIDs
            along with any summary information that it may have and re-query the folder.</para>
          <para>This value will only be set after the folder has been opened.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidValidityChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; UidValidityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; UidValidityChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the UID validity changes.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.UidValidityChanged" /> event is emitted whenever the <see cref="P:MailKit.MailFolder.UidValidity" /> value changes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public int Unread { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Unread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the number of unread messages in the folder.
            </summary>
        <value>The number of unread messages.</value>
        <remarks>
          <para>Gets the number of unread messages in the folder.</para>
          <para>Note: This value will only be set after calling <see cref="M:MailKit.MailFolder.Status(MailKit.StatusItems,System.Threading.CancellationToken)" />
            with <see cref="F:MailKit.StatusItems.Unread" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Unsubscribe from the folder.
            </summary>
        <remarks>
            Unsubscribes from the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UnsubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UnsubscribeAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UnsubscribeAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Asynchronously unsubscribe from the folder.
            </summary>
        <returns>An asynchronous task context.</returns>
        <remarks>
            Asynchronously unsubscribes from the folder.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.IMailStore" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.IMailStore" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.ProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.CommandException">
            The command failed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Unsubscribed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Unsubscribed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is unsubscribed.
            </summary>
        <remarks>
            The <see cref="E:MailKit.MailFolder.Unsubscribed" /> event is emitted when the folder is unsubscribed.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
